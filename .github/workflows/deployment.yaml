name: Deployment Workflow
on:
  workflow_call:
    inputs:
      # Optional finetuning inputs
      defaultBranch:
        required: False
        type: string
        default: master
      deployTag:
        required: False
        type: string
        default: ${{ github.sha }}
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      GH_AWS_ACCESS_KEY_ID:
        required: true
      GH_AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/${{ inputs.defaultBranch }}'
    steps:
      - uses: actions/checkout@v2
      - id: synth
        name: Synth cdk8s manifests
        run: |-
          cd k8s
          yarn install --frozen-lockfile

          # Get repo name (by removing owner/organization)
          export RELEASE_NAME=${REPOSITORY#*/}

          # Export RELEASE_NAME as an output
          echo "::set-output name=RELEASE_NAME::$RELEASE_NAME"

          yarn build
        env:
          GIT_SHA: ${{ inputs.deployTag }}
          REPOSITORY: ${{ github.repository }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      - name: Deploy
        if: steps.synth.outcome == 'success'
        run: |-
          aws eks --region us-east-1 update-kubeconfig --name production --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/kubectl

          # Get repo name from synth step
          RELEASE_NAME=${{ steps.synth.outputs.RELEASE_NAME }}

          # Deploy
          kubectl apply -f k8s/dist/ -l app.kubernetes.io/component=certificate
          kubectl apply -f k8s/dist/ --prune -l app.kubernetes.io/part-of=$RELEASE_NAME
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.GH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.GH_AWS_SECRET_ACCESS_KEY }}
