name: React Project Workflow
on:
  workflow_call:
    inputs:
      # Mandatory inputs
      projectName:
        required: true
        type: string
      imageName:
        required: TRUE
        type: string
      # Optional finetuning inputs
      defaultBranch:
        required: False
        type: string
        default: master
      nodeVersion:
        required: False
        type: string
        default: 14
      path:
        required: False
        type: string
        default: .
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
jobs:
  react-check:
    name: React Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: v0-${{ hashFiles('${{ inputs.path }}/yarn.lock') }}
      - name: Install Dependencies
        run: |-
          cd ${{ inputs.path }}
          yarn install --frozen-lockfile
      - name: Lint
        run: |-
          cd ${{ inputs.path }}
          yarn lint
      - name: Test
        run: |-
          cd ${{ inputs.path }}
          yarn test
      - name: Upload Code Coverage
        run: |-
          ROOT=$(pwd)
          cd ${{ inputs.path }}
          yarn run codecov -p $ROOT -F frtype=local,src=/tmp/.buildx-cacheontend
    container:
      image: node:${{ inputs.nodeVersion }}
  publish-frontend:
    name: Publish frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-publish-frontend
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build/Publish
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.path }}
          file: ${{ inputs.path }}/Dockerfile
          push: ${{ github.ref == 'refs/heads/${{ inputs.defaultBranch }}' }}
          cache-from: type=local,src=/tmp/.buildx-cache,type=registry,ref=pennlabs/${{ inputs.imageName }}:latest
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: pennlabs/${{ inputs.imageName }}:latest,pennlabs/${{ inputs.imageName }}:${{ github.sha }}
    needs: react-check
